#!/usr/bin/env bash
# Summary: Configure the shell environment for erlenv
# Usage: eval "$(erlenv init - [--no-rehash] [<shell>])"

set -e
[ -n "$ERLENV_DEBUG" ] && set -x

print=""
no_rehash=""
for args in "$@"
do
  if [ "$args" = "-" ]; then
    print=1
    shift
  fi

  if [ "$args" = "--no-rehash" ]; then
    no_rehash=1
    shift
  fi
done

shell="$1"
if [ -z "$shell" ]; then
  shell="$(basename "$SHELL")"
fi

READLINK=$(type -p greadlink readlink | head -1)
if [ -z "$READLINK" ]; then
  echo "erlenv: cannot find readlink - are you missing GNU coreutils?" >&2
  exit 1
fi

resolve_link() {
  $READLINK "$1"
}

abs_dirname() {
  local cwd="$(pwd)"
  local path="$1"

  while [ -n "$path" ]; do
    cd "${path%/*}"
    local name="${path##*/}"
    path="$(resolve_link "$name" || true)"
  done

  pwd
  cd "$cwd"
}

root="$(abs_dirname "$0")/.."

if [ -z "$print" ]; then
  case "$shell" in
  bash )
    profile='~/.bash_profile'
    ;;
  zsh )
    profile='~/.zshrc'
    ;;
  ksh )
    profile='~/.profile'
    ;;
  fish )
    profile='~/.config/fish/config.fish'
    ;;
  * )
    profile='your profile'
    ;;
  esac

  { echo "# Load erlenv automatically by adding"
    echo "# the following to ${profile}:"
    echo
    case "$shell" in
    fish )
      echo '. (erlenv init -|psub)'
      ;;
    * )
      echo 'eval "$(erlenv init -)"'
      ;;
    esac
    echo
  } >&2

  exit 1
fi

mkdir -p "${ERLENV_ROOT}/"{shims,releases}

if [[ ":${PATH}:" != *:"${ERLENV_ROOT}/shims":* ]]; then
  case "$shell" in
  fish )
    echo "setenv PATH '${ERLENV_ROOT}/shims' \$PATH"
  ;;
  * )
    echo 'export PATH="'${ERLENV_ROOT}'/shims:${PATH}"'
  ;;
  esac
fi

completion="${root}/completions/erlenv.${shell}"
[ -r "$completion" ] && echo ". '$completion'"

if [ -z "$no_rehash" ]; then
  echo 'erlenv rehash 2>/dev/null'
fi

commands=(`erlenv-commands --sh`)
case "$shell" in
fish )
  cat <<EOS
function erlenv
  set command \$argv[1]
  set -e argv[1]

  switch "\$command"
  case ${commands[*]}
    eval (erlenv "sh-\$command" \$argv)
  case '*'
    command erlenv "\$command" \$argv
  end
end
EOS
  exit 0
  ;;
ksh )
  cat <<EOS
function erlenv {
  typeset command
EOS
  ;;
* )
  cat <<EOS
erlenv() {
  local command
EOS
  ;;
esac

IFS="|"
cat <<EOS
  command="\$1"
  if [ "\$#" -gt 0 ]; then
    shift
  fi

  case "\$command" in
  ${commands[*]})
    eval "\`erlenv "sh-\$command" "\$@"\`";;
  *)
    command erlenv "\$command" "\$@";;
  esac
}
EOS
